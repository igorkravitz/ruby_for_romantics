# frozen_string_literal: true

# –ó–∞–¥–∞–Ω–∏–µ: —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ –º–µ—Ç–æ–¥ ‚Äúcheck_victory?‚Äù (—Å–µ–π—á–∞—Å –æ–Ω –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ
# false). –í —Å–ª—É—á–∞–µ –ø–æ–±–µ–¥—ã –∏–ª–∏ –ø–æ—Ä–∞–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–≤–æ–¥–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞
# —ç–∫—Ä–∞–Ω. –ò–∑–º–µ–Ω–∏—Ç–µ 10_000 –Ω–∞ 10 —á—Ç–æ–±—ã –ª–µ–≥—á–µ –±—ã–ª–æ –æ—Ç–ª–∞–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É.

# –ó–∞–¥–∞–Ω–∏–µ: –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –∫ "ruby case statements" –∏ –∑–∞–º–µ–Ω–∏—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
# "if...elsif" –Ω–∞ "case...when".

# –ó–∞–¥–∞–Ω–∏–µ: —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫, —á—Ç–æ–±—ã —Ü–∏–∫–ª –±—ã–ª —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º. –¢.–µ. —á—Ç–æ–±—ã
# —Ä–∞–≤–Ω–æ–≤–µ—Ä–æ—è—Ç–Ω–æ –Ω–∞ —Å–≤–µ—Ç –ø–æ—è–≤–ª—è–ª–∏—Å—å –ª—é–¥–∏ –∏ –º–∞—à–∏–Ω—ã. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—è–≤–∏–≤—à–∏—Ö—Å—è –ª—é–¥–µ–π –∏–ª–∏
# –º–∞—à–∏–Ω –¥–æ–ª–∂–Ω–æ —Ä–∞–≤–Ω—è—Ç—å—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ–≥–∏–±—à–∏—Ö –ª—é–¥–µ–π –∏–ª–∏ –º–∞—à–∏–Ω. –ù–µ—Å–º–æ—Ç—Ä—è –Ω–∞ —Ç–æ, —á—Ç–æ
# —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏ –±–æ—Ä—å–±–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π, –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ –º–æ–∂–µ—Ç –Ω–∞—Å—Ç—É–ø–∏—Ç—å —Å–∏—Ç—É–∞—Ü–∏—è, –≤
# –∫–æ—Ç–æ—Ä–æ–π —Ç–∞ –∏–ª–∏ –∏–Ω–∞—è —Å—Ç–æ—Ä–æ–Ω–∞ –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ
# —Ä–∞–∑–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è `humans` –∏ `machines` (1000, 100, 10).

# –ó–∞–¥–∞–Ω–∏–µ: —É–ª—É—á—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –¥–æ–±–∞–≤—å—Ç–µ –∫–∞–∫ –º–∏–Ω–∏–º—É–º –µ—â–µ 3 —Å–æ–±—ã—Ç–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç
# –≤–ª–∏—è—Ç—å –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å—É–¥–Ω–æ–≥–æ –¥–Ω—è.

########################################
# –û–ü–†–ï–î–ï–õ–Ø–ï–ú –ü–ï–†–ï–ú–ï–ù–ù–´–ï
########################################
@humans = 10
@machines = 10
########################################
# –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –ú–ï–¢–û–î–´
########################################
# –ú–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: true –∏–ª–∏ false
def luck?
  rand(0..1) == 1
end

def boom
  diff = rand(1..5)
  if luck?
    diff = diff > @machines ? @machines : diff
    @machines -= diff
    puts "#{diff} –º–∞—à–∏–Ω —É–Ω–∏—á—Ç–æ–∂–µ–Ω–æ"
  else
    diff = diff > @humans ? @humans : diff
    @humans -= diff
    puts "#{diff} –ª—é–¥–µ–π –ø–æ–≥–∏–±–ª–æ"
  end
  if luck?
    @machines += diff
    puts "#{diff} –º–∞—à–∏–Ω —Å–æ–∑–¥–∞–Ω–æ"
  else
    @humans += diff
    puts "#{diff} –ª—é–¥–µ–π —Ä–æ–¥–∏–ª–æ—Å—å"
  end
end

def tornado
  diff = rand(1..5)
  diff = [diff, @machines, @humans].min
  @machines -= diff
  puts "#{diff} –º–∞—à–∏–Ω —É–Ω–∏—á—Ç–æ–∂–µ–Ω–æ"
  @humans -= diff
  puts "#{diff} –ª—é–¥–µ–π –ø–æ–≥–∏–±–ª–æ"
end

def reinforcement
  diff = rand(1..5)
  @humans += diff
  puts "#{diff} –ª—é–¥–µ–π –ø—Ä–∏—à–ª–æ –Ω–∞ –ø–æ–º–æ—â—å"
end

def reduplication
  diff = @machines
  @machines += diff
  puts "#{diff} –º–∞—à–∏–Ω —Å–æ–∑–¥–∞–Ω–æ"
end

# –ú–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
def random_city
  dice = rand(1..5)
  case dice
  when 1
    "–ú–æ—Å–∫–≤–∞"
  when 2
    "–õ–æ—Å-–ê–Ω–¥–∂–µ–ª–µ—Å"
  when 3
    "–ü–µ–∫–∏–Ω"
  when 4
    "–õ–æ–Ω–¥–æ–Ω"
  else
    "–°–µ—É–ª"
  end
end

def random_sleep
  sleep rand(0.3..1.5)
end

def stats
  # puts "–û—Å—Ç–∞–ª–æ—Å—å #{@humans} –ª—é–¥–µ–π –∏ #{@machines} –º–∞—à–∏–Ω"
  puts "–û—Å—Ç–∞–ª–æ—Å—å"
  puts "–º–∞—à–∏–Ω:#{'ü§ñ' * @machines}"
  puts "–ª—é–¥–µ–π:#{'üë®' * @humans}"
end

########################################
# –°–û–ë–´–¢–ò–Ø
########################################
def event1
  puts "–ó–∞–ø—É—â–µ–Ω–∞ —Ä–∞–∫–µ—Ç–∞ –ø–æ –≥–æ—Ä–æ–¥—É #{random_city}"
  random_sleep
  boom
end

def event2
  puts "–ü—Ä–∏–º–µ–Ω–µ–Ω–æ —Ä–∞–¥–∏–æ–∞–∫—Ç–∏–≤–Ω–æ–µ –æ—Ä—É–∂–∏–µ –≤ –≥–æ—Ä–æ–¥–µ #{random_city}"
  random_sleep
  boom
end

def event3
  puts "–ì—Ä—É–ø–ø–∞ —Å–æ–ª–¥–∞—Ç –ø—Ä–æ—Ä—ã–≤–∞–µ—Ç –æ–±–æ—Ä–æ–Ω—É –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –≤ –≥–æ—Ä–æ–¥–µ #{random_city}"
  random_sleep
  boom
end

def event4
  puts "–ü—Ä–æ—à—ë–ª —É—Ä–∞–≥–∞–Ω –≤ –≥–æ—Ä–æ–¥–µ #{random_city}"
  random_sleep
  tornado
end

def event5
  puts '–ò–∑ –¥—Ä—É–≥–æ–π —Å—Ç—Ä–∞–Ω—ã –ø—Ä–∏—à–ª–∞ –ø–æ–º–æ—â—å'
  random_sleep
  reinforcement
end

def event6
  puts '–û—Ç–∫—Ä—ã–ª—Å—è –∑–∞–≤–æ–¥ —Ä–æ–±–æ—Ç–æ–≤. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–æ–±–æ—Ç–æ–≤ —É–¥–≤–æ–∏–ª–æ—Å—å'
  random_sleep
  reduplication
end

########################################
# –ü–†–û–í–ï–†–ö–ê –ü–û–ë–ï–î–´
########################################
def check_victory?
  @machines <= 0
end

def check_loss?
  @humans <= 0
end
########################################
# –ì–õ–ê–í–ù–´–ô –¶–ò–ö–õ
########################################
system "clear"
loop do
  stats
  if check_victory?
    puts "–ü–æ–±–µ–¥–∞! –ß–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥–∏–ª–æ. –û—Å—Ç–∞–ª–æ—Å—å #{@humans} —á–µ–ª–æ–≤–µ–∫."
    exit
  elsif check_loss?
    puts "–ü—Ä–æ–∏–≥—Ä—ã—à! –ß–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–æ –ø—Ä–æ–∏–≥—Ä–∞–ª–æ. –û—Å—Ç–∞–ª–æ—Å—å #{@machines} –º–∞—à–∏–Ω."
    exit
  end
  dice = rand(1..6)
  case dice
  when 1
    event1
  when 2
    event2
  when 3
    event3
  when 4
    event4
  when 5
    event5
  when 6
    event6
  end
  random_sleep
  system "clear"
end
